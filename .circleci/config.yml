version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    # working_directory: ~/happyTicketingAPI # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/mariadb:10.3.4-ram
        environment:
          - MYSQL_DATABASE: happyTicketingDBTest
          - MYSQL_USER: pofay
          - MYSQL_PASSWORD:

    steps: # a collection of executable commands

      - checkout # check out source code to working directory
      - run:
          name: Generate Application Properties for Application
          command: |
            cd happyTicketingAPI/src/main/resources
            echo -e "spring.jpa.hibernate.ddl-auto=create\nspring.datasource.url = jdbc:mysql://localhost:3306/happyTicketingDB?useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true\nspring.datasource.username=pofay\nspring.datasource.password=\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect\nspring.jpa.show-sql=false\nserver.port=8010" >> application.properties
      - run:
          name: Generate Test properties for endpoint tests
          command: |
            cd happyTicketingAPI/src/test/resources
            echo -e "spring.jpa.hibernate.ddl-auto=create\nspring.datasource.url = jdbc:mysql://localhost:3306/happyTicketingDBTest?useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true\nspring.datasource.username=pofay\nspring.datasource.password=\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect\nspring.jpa.show-sql=false\nserver.port=8010\nauth0.clientId=$CLIENT_ID\nauth0.clientSecret=$CLIENT_SECRET" >> application.properties

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - run: mvn package

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
